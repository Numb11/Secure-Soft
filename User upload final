<?php
session_start();
include 'config.php';

if (!isset($_SESSION['UserID'])) {
    die("Error: User not logged in.");
}

$UserID = $_SESSION['UserID'];
$file = $_FILES['file'];

$targetDir = "uploads/";
$allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];
$maxFileSize = 2 * 1024 * 1024; // 2MB limit

// Check for upload errors
if ($file['error'] !== UPLOAD_ERR_OK) {
    die("Error: File upload failed.");
}

// Get file details
$fileType = strtolower(pathinfo($file["name"], PATHINFO_EXTENSION));
$fileSize = $file["size"];

// Check file type
if (!in_array($fileType, $allowedTypes)) {
    die("Invalid file type. Only JPG, JPEG, PNG, and GIF are allowed.");
}

// Check file size
if ($fileSize > $maxFileSize) {
    die("File too large. Maximum allowed size is 2MB.");
}

// Generate a unique file name
$newFileName = uniqid("profile_", true) . "." . $fileType;
$targetFilePath = $targetDir . $newFileName;

// Move file securely
if (move_uploaded_file($file["tmp_name"], $targetFilePath)) {
    
    // Use prepared statements to prevent SQL injection
    $sql = "UPDATE user SET ProfilePicture = ? WHERE UserID = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $targetFilePath, $UserID);

    if ($stmt->execute()) {
        echo "Profile picture uploaded successfully!";
    } else {
        echo "Database error: " . $stmt->error;
    }
    
    $stmt->close();
} else {
    echo "Error moving the uploaded file.";
}
?>
Improvements & Protections in This Code
🔒 SQL Injection Protection → Uses prepared statements to securely update the database.
🛑 No Special Characters in File Name → Generates a unique file name (uniqid()).
📏 Size Restriction → Limits uploads to 2MB max.
🎭 MIME Type Validation → Ensures only JPG, JPEG, PNG, and GIF files are accepted.
🗂️ Secure Storage → Stores uploads in a dedicated directory (uploads/).

Would you like any additional security enhancements, such as storing files outside the web root or adding a verification step before saving the file? 🚀






You said:
can you add a link to another page in this?
ChatGPT said:
Sure! Below, I’ve added a link to another page (e.g., profile.php) at the end of the script so that users can navigate after uploading their profile picture. You can change profile.php to any other page you want.

Updated Code with a Link to Another Page
php
Copy
Edit
<?php
session_start();
include 'config.php';

if (!isset($_SESSION['UserID'])) {
    die("Error: User not logged in.");
}

$UserID = $_SESSION['UserID'];
$file = $_FILES['file'];

$targetDir = "uploads/";
$allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];
$maxFileSize = 2 * 1024 * 1024; // 2MB limit

// Check for upload errors
if ($file['error'] !== UPLOAD_ERR_OK) {
    die("Error: File upload failed.");
}

// Get file details
$fileType = strtolower(pathinfo($file["name"], PATHINFO_EXTENSION));
$fileSize = $file["size"];

// Check file type
if (!in_array($fileType, $allowedTypes)) {
    die("Invalid file type. Only JPG, JPEG, PNG, and GIF are allowed.");
}

// Check file size
if ($fileSize > $maxFileSize) {
    die("File too large. Maximum allowed size is 2MB.");
}

// Generate a unique file name
$newFileName = uniqid("profile_", true) . "." . $fileType;
$targetFilePath = $targetDir . $newFileName;

// Move file securely
if (move_uploaded_file($file["tmp_name"], $targetFilePath)) {
    
    // Use prepared statements to prevent SQL injection
    $sql = "UPDATE user SET ProfilePicture = ? WHERE UserID = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $targetFilePath, $UserID);

    if ($stmt->execute()) {
        echo "Profile picture uploaded successfully!";
        echo "<br><a href='profile.php'>Go to Profile</a>"; // Link to another page
    } else {
        echo "Database error: " . $stmt->error;
    }
    
    $stmt->close();
} else {
    echo "Error moving the uploaded file.";
}
?>
